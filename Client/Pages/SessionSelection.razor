@page "/session"
@inject ILogger<SessionSelection> Log
@inject IConfiguration Config
@inject HttpClient Http
@inject SessionHandler Session   
@inject IJSRuntime JSRuntime
@inject NavigationManager Nav
@inject ILocalStorageService Storage

<header class="@Branding.HeaderClass">
    <img src="@Branding.ImagePath"
         class="logo-image" />
</header>

<main>
    <article>
        <h1 class="@Branding.ForegroundClass">@Branding.SessionPageTitle</h1>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <blockquote class="error">
                Unable to connect to timekeeper service.
                <br /><br /><strong>Try refreshing the page.</strong>
                <br /><br />If this doesn't work, please contact <a href="mailto:support@timekeeper.cloud">support@timekeeper.cloud</a>
            </blockquote>
        }
        else
        {
            @if (Session.CloudSessions == null)
            {
                <blockquote>Loading...</blockquote>
            }
            else
            {
                @if (Session.CloudSessions.Count == 0)
                {
                    <blockquote class="warning">No sessions found in cloud storage. Create a new one below.</blockquote>
                }
                else
                {
                    <h2 class="@Branding.ForegroundClass">Select a session</h2>

                    <ul>
                        @foreach (var session in Session.CloudSessions.OrderBy(s => s.SessionName))
                        {
                            <li>
                                @*<button class="session-button"
                                        title="Delete this session"><i class="fas fa-trash"></i></button>*@
                                <button class="session-button"
                                        title="Duplicate this session"                                    
                                        @onclick="@(e => Duplicate(session.SessionId))"><i class="far fa-clone"></i></button>

                                <a href="/host/@session.SessionId"
                                   title="Select this session"
                                   @onclick="(e => SelectSession(session.SessionId))"
                                   @onclick:preventDefault>@session.SessionName</a>
                            </li>
                        }
                    </ul>
                }
            }

            @if (Session.State >= 1)
            {
                <h2 class="@Branding.ForegroundClass">Create a new session</h2>

                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <blockquote class="error">@ErrorMessage</blockquote>
                }

                <div class="session-edit-area">
                    <EditForm EditContext="@Session.NewSessionEditContext">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <p class="form-label">Session name</p>

                        <InputText @bind-Value="Session.NewSession.SessionName"
                                   class="session-edit" />
                        <br />
                        <button @onclick="@CheckSetNewSession">Create</button>

                    </EditForm>
                </div>
            }
        }

    </article>
</main>

<footer class="@Branding.FooterClass">
    @if (Branding.MustAuthorize)
    {
        <AuthorizeView>
            <Authorized>
                <div class="status-message"><span class="error-message">@Session.ErrorStatus</span><span>@Session.Status</span></div>
            </Authorized>
            <NotAuthorized>
                <div class="status-message error-message">Please log in</div>
            </NotAuthorized>
        </AuthorizeView>
    }
    else
    {
        <div class="status-message"><span class="error-message">@Session.ErrorStatus</span><span>@Session.Status</span></div>
    }

    <div class="status-message about-link">| <a href="/about">About Timekeeper</a></div>
</footer>