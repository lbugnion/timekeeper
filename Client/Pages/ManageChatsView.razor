@using Timekeeper.DataModel
@inject ILogger<ManageChatsView> Log
@inject IJSRuntime JSRuntime

@if (Parent.UiVisibility == ManagePolls.VisibilityVisible)
{
    <button @onclick="Parent.ToggleFocus"
            title="Toggle focus mode"
            class="focus">
        <i class="fas fa-expand"></i>
    </button>
}
else
{
    <button @onclick="Parent.ToggleFocus"
            title="Toggle focus mode"
            class="focus">
        <i class="fas fa-compress"></i>
    </button>
}

<h2 class="@Branding.ForegroundClass">@SessionName</h2>

@if (Handler.CurrentSession != null
  && Handler.IsAuthorized != null
  && Handler.IsAuthorized.Value
  && !Handler.IsInError
  && !Handler.IsBusy)
{
    <div class="chat-controls">
        <EditForm EditContext="@CurrentEditContext">
            <DataAnnotationsValidator />

            <blockquote class="warning @Parent.UiVisibility">
                <p><strong>WARNING:</strong> This feature is available in beta only.</p>

                <p>Enter your username below to make it easier to identify you in the chat.</p>

                <p>Use the "Toggle focus mode" button on the top-right to maximize the workapce.</p>
            </blockquote>

            <blockquote class="@Parent.UiVisibility">
                <p><strong>Tip: Use [Enter] to send the message!</strong></p>
                <p><strong>Tip: Use [Shift]-[Enter] to enter a new line!</strong></p>
                <p><a href="/display-chats/@Handler.CurrentSession.SessionId" target="_blank">Send this link to whomever you want to join the chat.</a></p>

                <p>
                    <label for="user-name">Enter your username</label>
                    <input type="text"
                            id="user-name"
                            onfocus="this.select()"
                            @bind="@UserName" />
                </p>

                @if (Handler.ChatProxy.SecretKey != null)
                {
                    <p>You must also send them this secret key so they can talk to you. Use email, a chat application or any other private communication to send this key.</p>

                    <p><span id="secret-key">@Handler.ChatProxy.SecretKey</span></p>
                }
            </blockquote>

            <div class="send-message-area">
                <label for="question">Enter your text (markdown supported)</label>

                <textarea @bind="@Handler.ChatProxy.NewChat.MessageMarkdown"
                          @bind:event="oninput"
                          @onkeypress="@HandleKeyPress"
                          @onfocus="@HandleFocus"
                          onreadystatechange="this.focus();"
                          id="@SendMessageInputId"
                          class="input-text"
                          disabled="@Handler.ChatProxy.IsSendingChat" />

                <br />
                <button @onclick="async e => await Handler.SendCurrentChat()"
                        disabled="@Handler.ChatProxy.IsSendingChat">Send the message</button>
            </div>
        </EditForm>        
    </div>

    <hr />

    @if (Handler.CurrentSession.Chats.Count == 0)
    {
        <p>No chats found yet...</p>
    }

    <div id="chat-display-area">
        @foreach (var chat in Handler.CurrentSession.Chats)
        {
            <ChatView Chat="@chat"
                      Host="@Handler" />
        }
    </div>
}
else
{
    <p>Please wait...</p>
}