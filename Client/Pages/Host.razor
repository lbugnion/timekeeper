@page "/host"
@page "/host/reset/{ResetSession}"
@inject HttpClient Http
@inject ILogger<Host> Log
@inject IConfiguration Config
@inject ILocalStorageService LocalStorage
@inject NavigationManager Nav
@inject IJSRuntime JSRuntime

<main>
    <article>
        <div class="connected-guests">
            @Handler.ConnectedGuests.Count guest(s)
        </div>

        @if (IsEditingSessionName)
        {
            <input class="h1-edit-field" @bind-value="@SessionName" />
        }
        else
        {
            <h1>@SessionName</h1>
        }

        @if (!Handler.IsBusy)
        {
            <div class="edit-link"><a href="#" @onclick="EditSessionName" @onclick:preventDefault>(@EditSessionNameLinkText)</a></div>
        }

        @if (Program.IsExperimental)
        {
            <blockquote class="warning"><strong>WARNING:</strong> This is an experimental version of Timekeeper currently in development. This can be unstable and cause issues. Use only for test purposes.</blockquote>
        }

        @if (Handler.CurrentSession != null)
        {
            @foreach (var clock in Handler.CurrentSession.Clocks)
            {
                <div class="clock-area" style="background-color: @clock.CurrentBackgroundColor">
                    <div class="clock-label">@clock.Message.Label</div>
                    <div class="clock-text">@clock.ClockDisplay</div>

                    <div class="clock-controls-area">
                        <button @onclick="(e => Handler.StartClock(clock, true, false))"
                                disabled="@clock.IsStartDisabled">
                            Start
                        </button>
                        <button @onclick="(e => Handler.StopClock(clock))"
                                disabled="@clock.IsStopDisabled">
                            Stop
                        </button>
                        <button @onclick="(e => ConfigureClock(clock))"
                                disabled="@clock.IsConfigDisabled">
                            Config
                        </button>

                        @if (clock.Message.ClockId != Model.Clock.DefaultClockId)
                        {
                            <button @onclick="(e => Handler.DeleteClock(clock))"
                                    disabled="@clock.IsDeleteDisabled">
                                Delete
                            </button>
                        }

                        <button @onclick="(e => Handler.AddClockAfter(clock.Message.ClockId))">
                            Add
                        </button>
                    </div>
                </div>
            }
        }

        <div class="message-area">
            <p><span class="message-text">@Handler.CurrentMessage</span></p>
        </div>

        <div class="send-message-area">
            <div class="form-label">Message to Guests, Click Enter to send</div>

            <input @bind-value="@Handler.InputMessage"
                   class="input-text"
                   id="@SendMessageInputId"
                   @bind-value:event="oninput"
                   @onkeypress="@HandleKeyPress"
                   @onfocus="@HandleFocus" />

            <button disabled="@Handler.IsSendMessageDisabled"
                    @onclick="@Handler.SendMessage"
                    id="send-message-button">
                Send Message
            </button>
        </div>

        <div class="controls-area">
            <button @onclick="(e => Handler.StartAllClocks(true))">
                Start all clocks
            </button>
        </div>

        <h2>Session</h2>

        @if (Handler.CurrentSession != null
         && !Handler.IsInError)
        {
            <div class="session-information-area">
                <h3>Send this link to your guests so they can connect to the session:</h3>

                <p><a href="@GuestUrl">@GuestUrl</a></p>
            </div>

            <div class="session-information-area">
                <h3>Connected guests</h3>

                @if (Handler.ConnectedGuests.Count == 0)
                {
                    <p>There are no connected guests at the moment.</p>
                }
                else
                {
                    <p>
                        There are @Handler.ConnectedGuests.Count connected guest(s).
                        <a href="#"
                           @onclick="ToggleIsGuestListExpanded"
                           @onclick:preventDefault>(@GuestListLinkText)</a>
                    </p>

                    @if (IsGuestListExpanded)
                    {
                        <ul>
                            @if (@AnonymousGuests > 0)
                            {
                                <li>@AnonymousGuests anonymous guest(s)</li>
                            }

                            @foreach (var guest in NamedGuests.OrderBy(g => g.DisplayName))
                            {
                                <li>@guest.DisplayName</li>
                            }
                        </ul>
                    }
                }
            </div>
        }

        @if (Handler.IsDeleteSessionWarningVisible)
        {
            <blockquote class="warning">
                <strong>Deleting the session is irreversible. Are you sure?</strong>
                <br /><br />
                If you delete the session and create a new one, all your guests will
                need to reconnect.
                <br /><br />
                <button @onclick="@Handler.DoDeleteSession"
                        class="small-button">
                    Yes
                </button>
                <button @onclick="@Handler.CancelDeleteSession"
                        class="small-button">
                    No
                </button>
            </blockquote>
        }

        <div class="controls-area">
            <button disabled="@Handler.IsDeleteSessionDisabled"
                    @onclick="@Handler.DeleteSession">
                Delete the session
            </button>
            <button disabled="@Handler.IsCreateNewSessionDisabled"
                    @onclick="@CreateNewSession">
                Create a new session
            </button>
        </div>

    </article>
</main>

<footer>
    <AuthorizeView>
        <Authorized>
            <div class="status-message"><span class="error-message">@Handler.ErrorStatus</span><span>@Handler.Status</span></div>
        </Authorized>
        <NotAuthorized>
            <div class="status-message error-message">Please log in</div>
        </NotAuthorized>
    </AuthorizeView>

    <div class="status-message about-link">| <a href="/about">About Timekeeper</a></div>
</footer>
